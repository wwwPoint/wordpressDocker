#!/bin/bash
set -e

echo "üöÄ WordPress Migration Script"
echo "============================="

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
print_status() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
check_requirements() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–º–æ–≥..."
    
    if [ ! -f .env ]; then
        print_error "–§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
        exit 1
    fi
    
    if [ ! -f docker-compose.yml ]; then
        print_error "–§–∞–π–ª docker-compose.yml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
        exit 1
    fi
    
    if [ ! -d wp-content ]; then
        print_error "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è wp-content –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!"
        exit 1
    fi
    
    if ! command -v docker &> /dev/null; then
        print_error "Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        print_error "Docker Compose –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞—Ä—Ö—ñ–≤–∞—Ç–æ—Ä—ñ–≤
    if command -v zip &> /dev/null; then
        print_success "ZIP –∞—Ä—Ö—ñ–≤–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π"
    elif command -v tar &> /dev/null; then
        print_warning "ZIP –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ TAR.GZ"
    else
        print_error "–ñ–æ–¥–µ–Ω –∞—Ä—Ö—ñ–≤–∞—Ç–æ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (zip –∞–±–æ tar)!"
        exit 1
    fi
    
    print_success "–í—Å—ñ –≤–∏–º–æ–≥–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ"
}

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_env() {
    print_status "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    export $(cat .env | grep -v '^#' | xargs)
    print_success "–ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ"
}

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
get_new_domain() {
    while true; do
        read -p "üåê –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: candyshop.com –∞–±–æ example.ex): " NEW_DOMAIN
        
        if [ -z "$NEW_DOMAIN" ]; then
            print_error "–î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—É—Å—Ç–∏–º! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
            continue
        fi
        
        # –û—á–∏—â—É—î–º–æ –≤–≤–µ–¥–µ–Ω–Ω—è –≤—ñ–¥ –ø—Ä–æ–±—ñ–ª—ñ–≤ —Ç–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ (—è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–ø–∞–¥–∫–æ–≤–æ –≤–≤—ñ–≤)
        NEW_DOMAIN=$(echo "$NEW_DOMAIN" | xargs | sed -E 's|^https?://||' | sed 's|/$||')
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω—É (–ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø—ñ–¥–¥–æ–º–µ–Ω—ñ–≤)
        if [[ "$NEW_DOMAIN" =~ ^[a-zA-Z0-9]([a-zA-Z0-9.-]*[a-zA-Z0-9])?$ ]] && [[ "$NEW_DOMAIN" == *.* ]]; then
            break
        else
            print_error "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω—É! –ü—Ä–∏–∫–ª–∞–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –¥–æ–º–µ–Ω—ñ–≤:"
            print_error "  - candyshop.com"
            print_error "  - subdomain.example.com"
            print_error "  - my-site.co.uk"
        fi
    done
    
    OLD_DOMAIN="localhost"
    
    print_success "–î–æ–º–µ–Ω –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:"
    print_success "  –°—Ç–∞—Ä–∏–π: $OLD_DOMAIN"
    print_success "  –ù–æ–≤–∏–π:  $NEW_DOMAIN"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
check_containers() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
    
    if ! docker-compose ps | grep -q "Up"; then
        print_warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω—ñ. –ó–∞–ø—É—Å–∫–∞—î–º–æ..."
        docker-compose up -d
        sleep 10
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ MySQL –≥–æ—Ç–æ–≤–∏–π
    print_status "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ MySQL..."
    local attempts=0
    local max_attempts=30
    
    while [ $attempts -lt $max_attempts ]; do
        if docker-compose exec -T mysql mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD &>/dev/null; then
            print_success "MySQL –≥–æ—Ç–æ–≤–∏–π"
            return 0
        fi
        print_status "MySQL —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π, –æ—á—ñ–∫—É—î–º–æ... (—Å–ø—Ä–æ–±–∞ $((attempts+1))/$max_attempts)"
        sleep 2
        attempts=$((attempts+1))
    done
    
    print_error "MySQL –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –ø—ñ—Å–ª—è $max_attempts —Å–ø—Ä–æ–±"
    exit 1
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
backup_original_database() {
    print_status "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
    
    local backup_dir="migration-backup-$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$backup_dir"
    
    docker-compose exec -T mysql mysqldump \
        -u root -p$MYSQL_ROOT_PASSWORD \
        --single-transaction \
        --routines \
        --triggers \
        $MYSQL_DATABASE > "$backup_dir/database_original.sql"
    
    if [ $? -eq 0 ]; then
        print_success "–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞: $backup_dir/database_original.sql"
        echo "$backup_dir" > .migration_backup_dir
    else
        print_error "–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó!"
        exit 1
    fi
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó
create_temp_database() {
    print_status "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó..."
    
    local backup_dir=$(cat .migration_backup_dir)
    TEMP_DATABASE="${MYSQL_DATABASE}_migration_temp"
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö
    docker-compose exec -T mysql mysql \
        -u root -p$MYSQL_ROOT_PASSWORD \
        -e "DROP DATABASE IF EXISTS $TEMP_DATABASE; CREATE DATABASE $TEMP_DATABASE CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    
    if [ $? -eq 0 ]; then
        print_success "–¢–∏–º—á–∞—Å–æ–≤–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö —Å—Ç–≤–æ—Ä–µ–Ω–∞: $TEMP_DATABASE"
    else
        print_error "–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö!"
        exit 1
    fi
    
    # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –≤ —Ç–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É
    print_status "–Ü–º–ø–æ—Ä—Ç –¥–∞–Ω–∏—Ö –≤ —Ç–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö..."
    docker-compose exec -T mysql mysql \
        -u root -p$MYSQL_ROOT_PASSWORD \
        $TEMP_DATABASE < "$backup_dir/database_original.sql"
    
    if [ $? -eq 0 ]; then
        print_success "–î–∞–Ω—ñ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ —Ç–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö"
    else
        print_error "–ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É –¥–∞–Ω–∏—Ö –≤ —Ç–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö!"
        exit 1
    fi
}

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–º–µ–Ω—É –≤ —Ç–∏–º—á–∞—Å–æ–≤—ñ–π –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
update_domain_in_temp_database() {
    print_status "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–º–µ–Ω—É –≤ —Ç–∏–º—á–∞—Å–æ–≤—ñ–π –±–∞–∑—ñ –¥–∞–Ω–∏—Ö..."
    
    local backup_dir=$(cat .migration_backup_dir)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–º–µ–Ω—É
    cat > "$backup_dir/update_domain.sql" << EOF
-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –æ–ø—Ü—ñ–π WordPress
UPDATE ${WORDPRESS_TABLE_PREFIX}options 
SET option_value = 'https://$NEW_DOMAIN' 
WHERE option_name IN ('home', 'siteurl');

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤ –ø–æ—Å—Ç–∞—Ö
UPDATE ${WORDPRESS_TABLE_PREFIX}posts 
SET post_content = REPLACE(post_content, 'http://localhost', 'https://$NEW_DOMAIN');

UPDATE ${WORDPRESS_TABLE_PREFIX}posts 
SET post_content = REPLACE(post_content, 'https://localhost', 'https://$NEW_DOMAIN');

UPDATE ${WORDPRESS_TABLE_PREFIX}posts 
SET post_content = REPLACE(post_content, '//localhost', '//$NEW_DOMAIN');

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
UPDATE ${WORDPRESS_TABLE_PREFIX}comments 
SET comment_content = REPLACE(comment_content, 'http://localhost', 'https://$NEW_DOMAIN');

UPDATE ${WORDPRESS_TABLE_PREFIX}comments 
SET comment_content = REPLACE(comment_content, 'https://localhost', 'https://$NEW_DOMAIN');

UPDATE ${WORDPRESS_TABLE_PREFIX}comments 
SET comment_content = REPLACE(comment_content, '//localhost', '//$NEW_DOMAIN');

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ—Ç–∞-–¥–∞–Ω–∏—Ö –ø–æ—Å—Ç—ñ–≤
UPDATE ${WORDPRESS_TABLE_PREFIX}postmeta 
SET meta_value = REPLACE(meta_value, 'http://localhost', 'https://$NEW_DOMAIN')
WHERE meta_value LIKE '%localhost%';

UPDATE ${WORDPRESS_TABLE_PREFIX}postmeta 
SET meta_value = REPLACE(meta_value, 'https://localhost', 'https://$NEW_DOMAIN')
WHERE meta_value LIKE '%localhost%';

UPDATE ${WORDPRESS_TABLE_PREFIX}postmeta 
SET meta_value = REPLACE(meta_value, '//localhost', '//$NEW_DOMAIN')
WHERE meta_value LIKE '%localhost%';

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏—Ö –æ–ø—Ü—ñ–π
UPDATE ${WORDPRESS_TABLE_PREFIX}usermeta 
SET meta_value = REPLACE(meta_value, 'http://localhost', 'https://$NEW_DOMAIN')
WHERE meta_value LIKE '%localhost%';

UPDATE ${WORDPRESS_TABLE_PREFIX}usermeta 
SET meta_value = REPLACE(meta_value, 'https://localhost', 'https://$NEW_DOMAIN')
WHERE meta_value LIKE '%localhost%';

UPDATE ${WORDPRESS_TABLE_PREFIX}usermeta 
SET meta_value = REPLACE(meta_value, '//localhost', '//$NEW_DOMAIN')
WHERE meta_value LIKE '%localhost%';

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
UPDATE ${WORDPRESS_TABLE_PREFIX}options 
SET option_value = REPLACE(option_value, 's:9:"localhost"', 's:${#NEW_DOMAIN}:"$NEW_DOMAIN"')
WHERE option_value LIKE '%s:9:"localhost"%';

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö URL (–ø–æ–≤–Ω–∏—Ö)
UPDATE ${WORDPRESS_TABLE_PREFIX}options 
SET option_value = REPLACE(option_value, 's:17:"https://localhost"', 's:$((${#NEW_DOMAIN}+8)):"https://$NEW_DOMAIN"')
WHERE option_value LIKE '%s:17:"https://localhost"%';

UPDATE ${WORDPRESS_TABLE_PREFIX}options 
SET option_value = REPLACE(option_value, 's:16:"http://localhost"', 's:$((${#NEW_DOMAIN}+8)):"https://$NEW_DOMAIN"')
WHERE option_value LIKE '%s:16:"http://localhost"%';

-- –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
SELECT 'Updated URLs:' as Info;
SELECT option_name, option_value 
FROM ${WORDPRESS_TABLE_PREFIX}options 
WHERE option_name IN ('home', 'siteurl');
EOF

    # –í–∏–∫–æ–Ω—É—î–º–æ SQL —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Ç–∏–º—á–∞—Å–æ–≤—ñ–π –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    docker-compose exec -T mysql mysql \
        -u root -p$MYSQL_ROOT_PASSWORD \
        $TEMP_DATABASE < "$backup_dir/update_domain.sql"
    
    if [ $? -eq 0 ]; then
        print_success "–î–æ–º–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ —Ç–∏–º—á–∞—Å–æ–≤—ñ–π –±–∞–∑—ñ –¥–∞–Ω–∏—Ö"
    else
        print_error "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–º–µ–Ω—É –≤ —Ç–∏–º—á–∞—Å–æ–≤—ñ–π –±–∞–∑—ñ –¥–∞–Ω–∏—Ö!"
        exit 1
    fi
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–º–ø—É –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
create_production_database_dump() {
    print_status "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–º–ø—É –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
    
    local backup_dir=$(cat .migration_backup_dir)
    
    docker-compose exec -T mysql mysqldump \
        -u root -p$MYSQL_ROOT_PASSWORD \
        --single-transaction \
        --routines \
        --triggers \
        $TEMP_DATABASE > "$backup_dir/database_production.sql"
    
    if [ $? -eq 0 ]; then
        print_success "–ü—Ä–æ–¥–∞–∫—à–Ω –¥–∞–º–ø —Å—Ç–≤–æ—Ä–µ–Ω–æ: $backup_dir/database_production.sql"
    else
        print_error "–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–¥–∞–∫—à–Ω –¥–∞–º–ø—É!"
        exit 1
    fi
}

# –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
cleanup_temp_database() {
    print_status "–û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
    
    docker-compose exec -T mysql mysql \
        -u root -p$MYSQL_ROOT_PASSWORD \
        -e "DROP DATABASE IF EXISTS $TEMP_DATABASE;"
    
    if [ $? -eq 0 ]; then
        print_success "–¢–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö –≤–∏–¥–∞–ª–µ–Ω–æ"
    else
        print_warning "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö: $TEMP_DATABASE"
    fi
}

# –ê—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è wp-content
archive_wp_content() {
    print_status "–ê—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è wp-content..."
    
    local backup_dir=$(cat .migration_backup_dir)
    local archive_name="wp-content-$NEW_DOMAIN-$(date +%Y%m%d_%H%M%S)"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å zip
    if command -v zip &> /dev/null; then
        print_status "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ZIP –∞—Ä—Ö—ñ–≤–∞—Ü—ñ—é..."
        cd wp-content
        zip -r "../$backup_dir/${archive_name}.zip" . -x "*.DS_Store" "*/.*"
        cd ..
        local final_archive="${archive_name}.zip"
    else
        print_warning "ZIP –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ TAR.GZ..."
        tar -czf "$backup_dir/${archive_name}.tar.gz" wp-content/
        local final_archive="${archive_name}.tar.gz"
    fi
    
    if [ $? -eq 0 ]; then
        print_success "wp-content –∑–∞–∞—Ä—Ö—ñ–≤–æ–≤–∞–Ω–æ: $backup_dir/$final_archive"
        echo "$final_archive" > "$backup_dir/wp_content_archive_name.txt"
    else
        print_error "–ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è wp-content!"
        exit 1
    fi
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
create_deployment_instructions() {
    local backup_dir=$(cat .migration_backup_dir)
    local archive_name=$(cat "$backup_dir/wp_content_archive_name.txt")
    
    cat > "$backup_dir/DEPLOYMENT_INSTRUCTIONS.txt" << EOF
üöÄ –Ü–ù–°–¢–†–£–ö–¶–Ü–á –ó –†–û–ó–ì–û–†–¢–ê–ù–ù–Ø WORDPRESS –ù–ê –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–†–Ü
=======================================================

üìÅ –§–∞–π–ª–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:
- $archive_name (wp-content –∞—Ä—Ö—ñ–≤)
- database_production.sql (–±–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º –¥–æ–º–µ–Ω–æ–º)

üîß –ö–†–û–ö–ò –†–û–ó–ì–û–†–¢–ê–ù–ù–Ø:

1. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å WordPress –Ω–∞ –Ω–æ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ ($NEW_DOMAIN)

2. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª–∏:
   - –†–æ–∑–ø–∞–∫—É–π—Ç–µ $archive_name –≤ –∫–æ—Ä—ñ–Ω—å WordPress
   $(if [[ "$archive_name" == *.zip ]]; then echo "   unzip $archive_name"; else echo "   tar -xzf $archive_name"; fi)

3. –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–∏—Ö:
   mysql -u username -p database_name < database_production.sql

4. –û–Ω–æ–≤—ñ—Ç—å wp-config.php –∑ –Ω–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –ë–î

5. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –¥–æ–∑–≤–æ–ª–∏:
   chmod -R 755 wp-content/
   chmod -R 644 wp-content/uploads/

6. –û–Ω–æ–≤—ñ—Ç—å .htaccess (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)

7. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è —Ç–∞ –ø–ª–∞–≥—ñ–Ω—ñ–≤

üìã –î–ê–ù–Ü –ú–Ü–ì–†–ê–¶–Ü–á:
- –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –¥–æ–º–µ–Ω: localhost
- –ù–æ–≤–∏–π –¥–æ–º–µ–Ω: $NEW_DOMAIN
- –î–∞—Ç–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó: $(date)
- –¢–∞–±–ª–∏—Ü—ñ –ø—Ä–µ—Ñ—ñ–∫—Å: $WORDPRESS_TABLE_PREFIX

‚ö†Ô∏è  –í–ê–ñ–õ–ò–í–û:
- –í–∞—à–∞ –ª–æ–∫–∞–ª—å–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö –ù–ï –±—É–ª–∞ –∑–º—ñ–Ω–µ–Ω–∞
- –í—Å—ñ –∑–º—ñ–Ω–∏ –±—É–ª–∏ –≤–Ω–µ—Å–µ–Ω—ñ –ª–∏—à–µ –≤ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏
- –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤—Å—ñ URL –≤ –∫–æ–Ω—Ç–µ–Ω—Ç—ñ –ø—ñ—Å–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
- –û–Ω–æ–≤—ñ—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω—ñ–≤, —â–æ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å URL
- –ü—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å —Å–∞–π—Ç—É
- –ù–∞–ª–∞—à—Ç—É–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç –¥–ª—è HTTPS

üîí –ë–ï–ó–ü–ï–ö–ê:
- –ó–º—ñ–Ω—ñ—Ç—å –ø–∞—Ä–æ–ª—ñ –¥–æ—Å—Ç—É–ø—É –¥–æ –ë–î
- –û–Ω–æ–≤—ñ—Ç—å WordPress salt –∫–ª—é—á—ñ –≤ wp-config.php
- –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –æ—Å—Ç–∞–Ω–Ω—ñ –≤–µ—Ä—Å—ñ—ó WordPress —Ç–∞ –ø–ª–∞–≥—ñ–Ω—ñ–≤

üí° –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø –õ–û–ö–ê–õ–¨–ù–û–ì–û –°–ê–ô–¢–£:
–í–∞—à –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–∞–π—Ç –∑–∞–ª–∏—à–∏–≤—Å—è –Ω–µ–∑–º—ñ–Ω–µ–Ω–∏–º —ñ –ø—Ä–æ–¥–æ–≤–∂—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏.
EOF

    print_success "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–æ: $backup_dir/DEPLOYMENT_INSTRUCTIONS.txt"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –ª–æ–∫–∞–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
verify_local_database_unchanged() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ –ª–æ–∫–∞–ª—å–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–µ –∑–º—ñ–Ω–µ–Ω–∞..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ URL –≤ –æ—Å–Ω–æ–≤–Ω—ñ–π –±–∞–∑—ñ –∑–∞–ª–∏—à–∏–ª–∏—Å—è –Ω–µ–∑–º—ñ–Ω–Ω–∏–º–∏
    local current_urls=$(docker-compose exec -T mysql mysql \
        -u root -p$MYSQL_ROOT_PASSWORD \
        -se "SELECT option_value FROM ${MYSQL_DATABASE}.${WORDPRESS_TABLE_PREFIX}options WHERE option_name IN ('home', 'siteurl');" | tr '\n' ' ')
    
    if echo "$current_urls" | grep -q "localhost"; then
        print_success "–õ–æ–∫–∞–ª—å–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑–∞–ª–∏—à–∏–ª–∞—Å—è –Ω–µ–∑–º—ñ–Ω–µ–Ω–æ—é"
    else
        print_warning "–£–í–ê–ì–ê: –°—Ö–æ–∂–µ, —â–æ –ª–æ–∫–∞–ª—å–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö –±—É–ª–∞ –∑–º—ñ–Ω–µ–Ω–∞!"
    fi
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    echo ""
    print_status "–ü–æ—á–∞—Ç–æ–∫ –ø—Ä–æ—Ü–µ—Å—É –º—ñ–≥—Ä–∞—Ü—ñ—ó..."
    
    check_requirements
    load_env
    get_new_domain
    
    echo ""
    print_status "–Ü–ù–§–û–†–ú–ê–¶–Ü–Ø: –¶–µ–π —Å–∫—Ä–∏–ø—Ç –ù–ï –∑–º—ñ–Ω—é—î –≤–∞—à—É –ª–æ–∫–∞–ª—å–Ω—É –±–∞–∑—É –¥–∞–Ω–∏—Ö!"
    print_status "–í—Å—ñ –∑–º—ñ–Ω–∏ –±—É–¥—É—Ç—å –≤–Ω–µ—Å–µ–Ω—ñ –ª–∏—à–µ –≤ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏."
    print_status "–í–∞—à –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–∞–π—Ç –ø—Ä–æ–¥–æ–≤–∂–∏—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫ —Ä–∞–Ω—ñ—à–µ."
    echo ""
    read -p "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏? (Y/n): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Nn]$ ]]; then
        print_status "–û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"
        exit 0
    fi
    
    check_containers
    backup_original_database
    create_temp_database
    update_domain_in_temp_database
    create_production_database_dump
    cleanup_temp_database
    archive_wp_content
    create_deployment_instructions
    verify_local_database_unchanged
    
    local backup_dir=$(cat .migration_backup_dir)
    
    echo ""
    print_success "üéâ –ú–Ü–ì–†–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–Ü–®–ù–û!"
    echo ""
    print_status "üìÅ –í—Å—ñ —Ñ–∞–π–ª–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: $backup_dir"
    print_status "üìã –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ DEPLOYMENT_INSTRUCTIONS.txt –¥–ª—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π"
    print_status "üí° –í–∞—à–∞ –ª–æ–∫–∞–ª—å–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑–∞–ª–∏—à–∏–ª–∞—Å—è –Ω–µ–∑–º—ñ–Ω–µ–Ω–æ—é"
    
    # –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
    rm -f .migration_backup_dir
}

# –û–±—Ä–æ–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
case "${1:-}" in
    --help|-h)
        echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 [–û–ü–¶–Ü–á]"
        echo ""
        echo "–û–ü–¶–Ü–á:"
        echo "  --help, -h   –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É"
        echo ""
        echo "–¶–µ–π —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä—é—î —Ñ–∞–π–ª–∏ –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è WordPress –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä—ñ"
        echo "–ë–ï–ó –ó–ú–Ü–ù–ò –≤–∞—à–æ—ó –ª–æ–∫–∞–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."
        echo ""
        echo "–°—Ç–≤–æ—Ä—é–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏:"
        echo "  - database_production.sql (–±–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ URL)"
        echo "  - wp-content –∞—Ä—Ö—ñ–≤"
        echo "  - DEPLOYMENT_INSTRUCTIONS.txt (—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –∑ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è)"
        ;;
    *)
        main
        ;;
esac